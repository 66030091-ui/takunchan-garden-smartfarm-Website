// ===== Takunchan Garden IoT Dashboard =====
// ‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å ThingSpeak channel ‡∏à‡∏£‡∏¥‡∏á
const CHANNEL_ID = "3069958";
const READ_API_KEY = "TX73L46FK87FRFGQ";
const URL = `https://api.thingspeak.com/channels/${CHANNEL_ID}/feeds.json?results=1&api_key=${READ_API_KEY}`;

// ‡∏≠‡πâ‡∏≤‡∏á‡∏≠‡∏¥‡∏á element ‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
const moistEl = document.getElementById("metric-moist");
const pumpEl = document.getElementById("pump-status");
const modeEl = document.getElementById("mode-status");

// ‡∏ü‡∏±‡∏á‡∏Å‡πå‡∏ä‡∏±‡∏ô‡∏î‡∏∂‡∏á‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏à‡∏≤‡∏Å ThingSpeak
async function fetchThingSpeak() {
  try {
    const res = await fetch(URL);
    const data = await res.json();

    if (data.feeds && data.feeds.length > 0) {
      const feed = data.feeds[0];

      // ‚öôÔ∏è ‡∏õ‡∏£‡∏±‡∏ö‡∏ï‡∏≤‡∏°‡∏ü‡∏¥‡∏•‡∏î‡πå‡∏à‡∏£‡∏¥‡∏á‡πÉ‡∏ô ThingSpeak ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì
      const moisture = parseFloat(feed.field1);   // field1 = ‡∏Ñ‡∏ß‡∏≤‡∏°‡∏ä‡∏∑‡πâ‡∏ô (%)
      const pumpState = parseInt(feed.field2);    // field2 = ‡∏õ‡∏±‡πä‡∏° (0 = OFF, 1 = ON)
      const mode = feed.field3 || "AUTO";         // field3 = ‡πÇ‡∏´‡∏°‡∏î‡∏Ñ‡∏ß‡∏ö‡∏Ñ‡∏∏‡∏°

      // üßæ ‡πÅ‡∏™‡∏î‡∏á‡∏ú‡∏•‡∏ö‡∏ô‡∏´‡∏ô‡πâ‡∏≤‡πÄ‡∏ß‡πá‡∏ö
      if (moistEl) moistEl.textContent = `${moisture.toFixed(1)} %`;

      if (pumpEl) {
        pumpEl.classList.toggle("on", pumpState === 1);
        pumpEl.classList.toggle("off", pumpState !== 1);
        const label = pumpEl.querySelector(".label");
        if (label) label.textContent = pumpState === 1 ? "ON" : "OFF";
      }

      if (modeEl) modeEl.textContent = mode;
    }
  } catch (err) {
    console.error("ThingSpeak fetch error:", err);
  }
}

// ‡πÄ‡∏£‡∏µ‡∏¢‡∏Å‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏Ñ‡∏£‡∏±‡πâ‡∏á‡πÅ‡∏£‡∏Å ‡πÅ‡∏•‡∏∞‡∏≠‡∏±‡∏õ‡πÄ‡∏î‡∏ï‡∏ó‡∏∏‡∏Å 15 ‡∏ß‡∏¥‡∏ô‡∏≤‡∏ó‡∏µ
fetchThingSpeak();
setInterval(fetchThingSpeak, 15000);
